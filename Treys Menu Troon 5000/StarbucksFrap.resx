<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        2Q==
</value>
  </data>
</root>