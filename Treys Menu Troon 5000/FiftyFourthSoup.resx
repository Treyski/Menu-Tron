<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        g9TddSURTGOXAkkjAE1JJJQh/9k=
</value>
  </data>
</root>