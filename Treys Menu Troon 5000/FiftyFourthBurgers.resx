<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        2Q==
</value>
  </data>
</root>