<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        e0tJAx7S1vEaBgqlR9v/2Q==
</value>
  </data>
</root>