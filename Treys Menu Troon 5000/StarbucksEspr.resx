<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>