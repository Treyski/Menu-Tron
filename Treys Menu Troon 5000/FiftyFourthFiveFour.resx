<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SakklY6CGlOkklHP/9k=
</value>
  </data>
</root>